/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.robol.shiftscheduler.desktop;

import it.robol.shiftscheduler.backend.Employee;
import it.robol.shiftscheduler.backend.EmployeeStorage;
import it.robol.shiftscheduler.backend.Timetable;
import it.robol.shiftscheduler.backend.TimetableSolver;
import java.io.IOException;
import java.util.concurrent.ExecutionException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import java.util.ResourceBundle;

/**
 *
 * @author robol
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        try {
            setIconImage(ImageIO.read(
                ClassLoader.getSystemResource("images/program-icon.png")));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newEmployeeTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        newEmployeeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeesTable = new javax.swing.JTable();
        editConstraintsButton = new javax.swing.JButton();
        deleteEmployeeButton = new javax.swing.JButton();
        generateButton = new javax.swing.JButton();
        editShiftsButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        editShiftsMenuItem = new javax.swing.JMenuItem();
        generateTimetableMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("it/robol/shiftscheduler/desktop/Bundle"); // NOI18N
        setTitle(bundle.getString("MainWindow.title")); // NOI18N

        newEmployeeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("MainWindow.jLabel1.text")); // NOI18N

        newEmployeeButton.setText(bundle.getString("MainWindow.newEmployeeButton.text")); // NOI18N
        newEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeButtonActionPerformed(evt);
            }
        });

        employeesTable.setModel(new EmployeeTableModel());
        jScrollPane2.setViewportView(employeesTable);
        employeesTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        editConstraintsButton.setText(bundle.getString("MainWindow.editConstraintsButton.text")); // NOI18N
        editConstraintsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editConstraintsButtonActionPerformed(evt);
            }
        });

        deleteEmployeeButton.setText(bundle.getString("MainWindow.deleteEmployeeButton.text")); // NOI18N
        deleteEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeButtonActionPerformed(evt);
            }
        });

        generateButton.setText(bundle.getString("MainWindow.generateButton.text")); // NOI18N
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        editShiftsButton.setText(bundle.getString("MainWindow.editShiftsButton.text")); // NOI18N
        editShiftsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editShiftsButtonActionPerformed(evt);
            }
        });

        settingsButton.setText(bundle.getString("MainWindow.settingsButton.text")); // NOI18N
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });

        jMenu1.setText(bundle.getString("MainWindow.jMenu1.text")); // NOI18N

        editShiftsMenuItem.setText(bundle.getString("MainWindow.editShiftsMenuItem.text")); // NOI18N
        editShiftsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editShiftsMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(editShiftsMenuItem);

        generateTimetableMenuItem.setText(bundle.getString("MainWindow.generateTimetableMenuItem.text")); // NOI18N
        generateTimetableMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateTimetableMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(generateTimetableMenuItem);

        quitMenuItem.setText(bundle.getString("MainWindow.quitMenuItem.text")); // NOI18N
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(quitMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(bundle.getString("MainWindow.jMenu2.text")); // NOI18N

        aboutMenuItem.setText(bundle.getString("MainWindow.aboutMenuItem.text")); // NOI18N
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(aboutMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newEmployeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editConstraintsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newEmployeeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteEmployeeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editShiftsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(settingsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newEmployeeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 50, Short.MAX_VALUE)
                        .addComponent(settingsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editShiftsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editConstraintsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteEmployeeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generateButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeButtonActionPerformed
        String employeeName = newEmployeeTextField.getText();
        ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                    Constants.TRANSLATION_BUNDLE);
        
        if ("".equals(employeeName)) {
            JOptionPane.showMessageDialog(this, 
                    bundle.getString("MainWindow.noNameSpecified.text"),
                    bundle.getString("MainWindow.noNameSpecified.title"),
                    JOptionPane.ERROR_MESSAGE);
        }
        else {        
            EmployeeStorage.getInstance().addEmployee(employeeName, 40.0);
            newEmployeeTextField.setText("");
        }
    }//GEN-LAST:event_newEmployeeButtonActionPerformed

    private void deleteEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeButtonActionPerformed
        EmployeeStorage storage = EmployeeStorage.getInstance();
        Employee e = storage.getEmployee(
                employeesTable.getSelectedRow());
        
        // TODO: Ask for confirmation before proceeding. 
        
        storage.deleteEmployee(e);
    }//GEN-LAST:event_deleteEmployeeButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // This task could run for quite a long time, so we should make
        // sure that the user can cancel if he/she wants to.         
        final ComputationDialog dialog = new ComputationDialog(this, true);
        
        SwingWorker<Timetable, Void> worker = new SwingWorker<Timetable, Void>() {
            @Override
            protected Timetable doInBackground() throws Exception {
                TimetableSolver solver = new TimetableSolver();
                return solver.solveProblem();
            }
            
            @Override
            protected void done() {
                try {
                    dialog.setVisible(false);
                    
                    if (! isCancelled()) {
                        Timetable t = get();
                        showTimetable(t);
                    }                    
                } catch (ExecutionException | InterruptedException e) {
                    e.printStackTrace();
                } finally {
                    dialog.dispose();
                }
            }
        };
        
        dialog.setWorker(worker);
        dialog.setLocationRelativeTo(this);
        worker.execute();
        dialog.setVisible(true);
    }//GEN-LAST:event_generateButtonActionPerformed

    public void showTimetable(Timetable t) {
        if (t != null) {        
            TimetableViewer viewer = new TimetableViewer(this, true);
            viewer.setTableModel(new TimetableTableModel(t));
            viewer.setLocationRelativeTo(this);
            viewer.setVisible(true);        
        } else {
            ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                    Constants.TRANSLATION_BUNDLE);
            
            JOptionPane.showMessageDialog(this, 
                    bundle.getString("MainWindow.solverErrorDialog.text"), 
                    bundle.getString("MainWindow.solverErrorDialog.title"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void editShiftsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editShiftsButtonActionPerformed
        ShiftEditor editor = new ShiftEditor(this, true);
        editor.setLocationRelativeTo(this);
        editor.setVisible(true);
    }//GEN-LAST:event_editShiftsButtonActionPerformed

    private void editConstraintsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editConstraintsButtonActionPerformed
        int index = employeesTable.getSelectedRow();
        if (index != -1) {
            EmployeeEditor editor = new EmployeeEditor(this, true);
            editor.setEmployee(index);
            editor.setLocationRelativeTo(this);
            editor.setVisible(true);
        }
        else {
            ResourceBundle bundle = java.util.ResourceBundle.getBundle(
                    Constants.TRANSLATION_BUNDLE);            
            JOptionPane.showMessageDialog(this, 
                    bundle.getString("MainWindow.SelectRow.text"),
                    bundle.getString("MainWindow.SelectRow.title"),
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_editConstraintsButtonActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        SettingsDialog dialog = new SettingsDialog(this, true);
        dialog.setVisible(true);
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void newEmployeeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeTextFieldActionPerformed
        newEmployeeButtonActionPerformed(evt);
    }//GEN-LAST:event_newEmployeeTextFieldActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        GPLAboutDialog dialog = new GPLAboutDialog(this, "Shift Scheduler", "0.1", 
                "<html>Shift Scheduler if an open source software that computes shift <br />"
                        + "timetables by solving appropriate integer programming problems.</html>", 
                "<html><br />(C) 2015 Leonardo Robol &lt;<a href=\"mailto:leo@robol.it\">leo@robol.it</a>&gt; <br />" + 
                "Icon made by <a href=\"http://www.flaticon.com/authors/freepik\">Freepik</a> from "
                        + "<a href=\"http://www.flaticon.com\" title=\"Flaticon\">www.flaticon.com</a><br /> "
                        + "licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" "
                        + "title=\"Creative Commons BY 3.0\">CC BY 3.0</a></html>");
        dialog.actionPerformed(evt);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitMenuItemActionPerformed

    private void editShiftsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editShiftsMenuItemActionPerformed
        editShiftsButtonActionPerformed(evt);
    }//GEN-LAST:event_editShiftsMenuItemActionPerformed

    private void generateTimetableMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateTimetableMenuItemActionPerformed
        generateButtonActionPerformed(evt);
    }//GEN-LAST:event_generateTimetableMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton deleteEmployeeButton;
    private javax.swing.JButton editConstraintsButton;
    private javax.swing.JButton editShiftsButton;
    private javax.swing.JMenuItem editShiftsMenuItem;
    private javax.swing.JTable employeesTable;
    private javax.swing.JButton generateButton;
    private javax.swing.JMenuItem generateTimetableMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton newEmployeeButton;
    private javax.swing.JTextField newEmployeeTextField;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JButton settingsButton;
    // End of variables declaration//GEN-END:variables
}
